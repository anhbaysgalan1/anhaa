{"version":3,"file":"ngx-cryptobase.umd.min.js","sources":["~/ngx-cryptobase/modules/header/header.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/ngx-cryptobase/modules/header/header.module.ts","~/ngx-cryptobase/modules/footer/footer.component.ts","~/ngx-cryptobase/modules/footer/footer.module.ts","~/ngx-cryptobase/modules/wallet/wallet.component.ts","../../../../node_modules/ngx-window-token/src/ngx-window-token.ts","../../../../node_modules/ngx-clipboard/src/clipboard.service.ts","../../../../node_modules/ngx-clipboard/src/clipboard.directive.ts","../../../../node_modules/ngx-clipboard/src/index.ts","~/ngx-cryptobase/modules/wallet/wallet.module.ts","~/ngx-cryptobase/modules/history/history.component.ts","~/ngx-cryptobase/modules/history/history.module.ts","~/ngx-cryptobase/modules/setting/setting.component.ts","~/ngx-cryptobase/modules/setting/setting.module.ts","~/ngx-cryptobase/modules/navbar/navbar.component.ts","~/ngx-cryptobase/modules/navbar/navbar.module.ts","~/ngx-cryptobase/modules/table/services/pager.service.ts","~/ngx-cryptobase/modules/table/table.component.ts","~/ngx-cryptobase/modules/table/table.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nexport class HeaderComponent implements OnInit {\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-header',\n  template: `\n    <header class=\"header\">\n      <div class=\"container\">\n\n        <a href=\"#\" class=\"header-logo pull-left\">\n          <h1>\n            <ng-content select=\"[logo]\"></ng-content>\n          </h1>\n        </a>\n\n        <div class=\"btn-group login\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\">\n            <img class=\"user-avatar\" src=\"http://s3.amazonaws.com/37assets/svn/765-default-avatar.png\">\n            John Doe <span class=\"caret\"></span>\n          </button>\n\n          <ul class=\"dropdown-menu\" role=\"menu\" *dropdownMenu>\n            <ng-content select=\"[menu]\"></ng-content>\n          </ul>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n      </div>\n    </header>\n  `,\n  styles: [`\n    .header {\n      margin-bottom: 0; }\n      .header a {\n        color: white; }\n        .header a:hover {\n          text-decoration: none;\n          color: white; }\n      .header .login {\n        float: right; }\n      .header .header-logo h1 {\n        color: white;\n        margin-top: 0.5rem;\n        font-size: 22px; }\n      .header .user-avatar {\n        height: 24px;\n        width: 24px;\n        border-radius: 200px;\n        float: left;\n        margin-right: 10px; }\n      .header .dropdown-item {\n        color: #3f9adb; }\n      .header .dropdown-item:hover {\n        color: #0071c1; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n  show(\n    opts: {\n      content?: string | TemplateRef<any>;\n      context?: any;\n      [key: string]: any;\n    } = {}\n  ): ComponentRef<T> {\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context);\n      const injector = ReflectiveInjector.resolveAndCreate(\n        this._providers,\n        this._injector\n      );\n\n      this._componentRef = this._componentFactory.create(\n        injector,\n        this._contentRef.nodes\n      );\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader';\n\nimport { PositioningService } from '../positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nexport class HeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot()\n  ],\n  declarations: [HeaderComponent],\n  exports: [\n    HeaderComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nexport class FooterComponent implements OnInit {\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-footer',\n  template: `\n    <footer class=\"footer\">\n      <div class=\"block\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4\">\n              <ul class=\"footer-nav\">\n                <li><a href=\"#\">Home</a></li>\n                <li><a href=\"#\">Career</a></li>\n                <li><a href=\"#\">Legal &amp; Privacy</a></li>\n              </ul>\n            </div>\n            <div class=\"col-12 col-md-4\">\n            </div>\n            <div class=\"col-12 col-md-4\">\n              <div class=\"float-md-right\">\n                <div class=\"d-block d-md-none mt-4\"></div>\n                <p class=\"small footer-text\">\n                  <ng-content></ng-content>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  `,\n  styles: [`\n    .footer {\n      margin-top: 30px; }\n      .footer .block {\n        padding: 30px 0;\n        border-radius: 0;\n        border-right: 0;\n        border-left: 0; }\n      .footer p {\n        margin-bottom: 0; }\n\n    ul.footer-nav {\n      margin-bottom: 0;\n      padding-left: 0; }\n      ul.footer-nav li {\n        display: inline;\n        margin-right: 20px;\n        font-size: 14px; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FooterComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFooterComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFooterComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\nexport class FooterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [FooterComponent],\n  exports: [\n    FooterComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FooterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFooterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFooterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Input, OnInit} from '@angular/core';\nexport class WalletComponent implements OnInit {\n  accountSelected;\nconstructor() { }\n\n   accounts;\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-wallet',\n  template: `\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-4\">\n        <div class=\"block\">\n          <h2 class=\"block-title\">Your wallets</h2>\n          <div class=\"list-group currencies-list\" id=\"list-tab\" role=\"tablist\">\n\n            <a *ngFor=\"let account of accounts\" class=\"list-group-item list-group-item-action\"\n               (click)=\"accountSelected = account\"\n               [ngClass]=\"{'active': accountSelected === account}\">\n              <i class=\"list-group-item-icon fa bg-warning\"\n                 [ngClass]=\"{\n                  'fa-btc bg-warning': account.currency === 'btc',\n                  'fa-jpy bg-primary': account.currency === 'jpy',\n                  'fa-try bg-info': account.currency === 'try',\n                  'fa-euro': account.currency === 'euro'\n                }\"></i>\n              <div>\n                <b>{{account.currency.toUpperCase()}} Wallet #{{account.id}}</b>\n                <div class=\"list-group-item-value\">\n                  {{account.balance}} {{account.currency.toUpperCase()}} = <span>€0.00</span>\n                </div>\n              </div>\n            </a>\n\n          </div>\n          <a class=\"list-group-item list-group-item-action text-center new-account\" id=\"list-settings-list\" data-toggle=\"list\" href=\"#list-settings\" role=\"tab\" aria-controls=\"settings\">\n            + New Wallet\n          </a>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-8 d-none d-lg-block d-xl-block\">\n        <div class=\"block\">\n\n          <div class=\"tab-content\" id=\"nav-tabContent\">\n\n            <div class=\"tab-pane fade show active\" id=\"list-home\" role=\"tabpanel\" aria-labelledby=\"list-home-list\" *ngIf=\"!!accountSelected\">\n              <div class=\"text-center pb-5\">\n\n                <div class=\"block-title\">\n                  <div class=\"row justify-content-center\">\n                    <ul class=\"nav nav-tabs\" role=\"tablist\">\n                      <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-arrow-down\"></i> Deposit</a>\n                      </li>\n                      <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-paper-plane\"></i> Withdrawl</a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n\n                  <div class=\"col-md-6 offset-md-3\">\n                    <div *ngIf=\"accountSelected && accountSelected.locked == 0; else locked\">\n                    </div>\n\n                    <div class=\"row justify-content-center pt-4\">\n                      <div class=\"icon-block btc\">\n                        <i class=\"icon fa fa-{{accountSelected.currency | lowercase }}\"\n                         [ngClass]=\"{\n                          'fa-btc bg-warning': accountSelected.currency === 'btc',\n                          'fa-jpy bg-primary': accountSelected.currency === 'jpy',\n                          'fa-try bg-info': accountSelected.currency === 'try',\n                          'fa-euro': accountSelected.currency === 'euro'\n                        }\"></i>\n                        <h2>{{accountSelected.currency | uppercase}}</h2>\n                        {{accountSelected.currency | lowercase }}\n                      </div>\n                    </div>\n\n                    <div class=\"col-12\">\n                      <div class=\"text-center mt-4\">\n                        <img src=\"assets/images/qr.gif\" />\n                      </div>\n                    </div>\n\n                    <div class=\"text-center\">\n                      <span class=\"uppercase\">Your {{accountSelected.currency | uppercase}} public address</span>\n                      <span class=\"break-word mt-2\"><input #depositAddress type=\"text\" class=\"form-control\" value=\"QC1UF0VCDEBl9LeYGtyvSpIZUHZOYl1meKpdzqb6Br\" onClick=\"select();\"></span>\n                    </div>\n\n                    <div class=\"row mt-2\">\n                      <div class=\"col-12\">\n                        <button class=\"btn btn-secondary btn-block\" [ngxClipboard]=\"depositAddress\" type=\"button\">Copy to clipboard</button>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n                <ng-template #locked>\n                  <div class=\"row pt-4\">\n                    <div class=\"col-6\"><b>Locked</b><br>{{accountSelected.locked}} {{accountSelected.currency | uppercase}}</div>\n                    <div class=\"col-6\"><b>Balance</b><br>{{accountSelected.balance}} {{accountSelected.currency | uppercase}}</div>\n                  </div>\n                  <hr>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"tab-pane fade\" id=\"list-profile\" role=\"tabpanel\" aria-labelledby=\"list-profile-list\">Content 2</div>\n            <div class=\"tab-pane fade\" id=\"list-messages\" role=\"tabpanel\" aria-labelledby=\"list-messages-list\">Content 3</div>\n            <div class=\"tab-pane fade\" id=\"list-settings\" role=\"tabpanel\" aria-labelledby=\"list-settings-list\">Content 4</div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accounts': [{ type: Input },],\n};\n}\n\nfunction WalletComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWalletComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWalletComponent.ctorParameters;\n/** @type {?} */\nWalletComponent.propDecorators;\n/** @type {?} */\nWalletComponent.prototype.accountSelected;\n/** @type {?} */\nWalletComponent.prototype.accounts;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { InjectionToken } from '@angular/core';\n\nexport const WINDOW = new InjectionToken<Window>('WindowToken');\n\nexport function _window(): Window {\n    return window;\n}\n\n@NgModule({\n    providers: [{\n        provide: WINDOW,\n        useFactory: _window\n    }]\n})\nexport class WindowTokenModule { }\n","import { Inject, Injectable, Optional, Renderer, SkipSelf, InjectionToken } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { WINDOW } from 'ngx-window-token';\n\n@Injectable()\nexport class ClipboardService {\n    private tempTextArea: HTMLTextAreaElement | undefined;\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        @Inject(WINDOW) private window: any,\n    ) { }\n    public get isSupported(): boolean {\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy');\n    }\n\n    public isTargetValid(element: HTMLInputElement | HTMLTextAreaElement): boolean {\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n            if (element.hasAttribute('disabled')) {\n                // tslint:disable-next-line:max-line-length\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n            }\n            return true;\n        }\n        throw new Error('Target should be input or textarea');\n    }\n\n    /**\n     * copyFromInputElement\n     */\n    public copyFromInputElement(targetElm: HTMLInputElement | HTMLTextAreaElement, renderer: Renderer): boolean {\n        try {\n            this.selectTarget(targetElm, renderer);\n            const re = this.copyText();\n            this.clearSelection(targetElm, this.window);\n            return re;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     */\n    public copyFromContent(content: string, renderer: Renderer) {\n        if (!this.tempTextArea) {\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\n            this.document.body.appendChild(this.tempTextArea);\n        }\n        this.tempTextArea.value = content;\n        return this.copyFromInputElement(this.tempTextArea, renderer);\n    }\n\n    // remove temporary textarea if any\n    public destroy() {\n        if (this.tempTextArea) {\n            this.document.body.removeChild(this.tempTextArea);\n            this.tempTextArea = undefined;\n        }\n    }\n\n    // select the target html input element\n    private selectTarget(inputElement: HTMLInputElement | HTMLTextAreaElement, renderer: Renderer): number | undefined {\n        renderer.invokeElementMethod(inputElement, 'select');\n        renderer.invokeElementMethod(inputElement, 'setSelectionRange', [0, inputElement.value.length]);\n        return inputElement.value.length;\n    }\n\n    private copyText(): boolean {\n        return this.document.execCommand('copy');\n    }\n    // Removes current selection and focus from `target` element.\n    private clearSelection(inputElement: HTMLInputElement | HTMLTextAreaElement, window: Window) {\n        // tslint:disable-next-line:no-unused-expression\n        inputElement && inputElement.blur();\n        window.getSelection().removeAllRanges();\n    }\n\n    // create a fake textarea for copy command\n    private createTempTextArea(doc: Document, window: Window): HTMLTextAreaElement {\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\n        let ta: HTMLTextAreaElement;\n        ta = doc.createElement('textarea');\n        // Prevent zooming on iOS\n        ta.style.fontSize = '12pt';\n        // Reset box model\n        ta.style.border = '0';\n        ta.style.padding = '0';\n        ta.style.margin = '0';\n        // Move element out of screen horizontally\n        ta.style.position = 'absolute';\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\n        // Move element to the same position vertically\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\n        ta.style.top = yPosition + 'px';\n        ta.setAttribute('readonly', '');\n        return ta;\n    }\n}\n// this pattern is mentioned in https://github.com/angular/angular/issues/13854 in #43\nexport function CLIPBOARD_SERVICE_PROVIDER_FACTORY(doc: Document, win: Window, parentDispatcher: ClipboardService) {\n    return parentDispatcher || new ClipboardService(doc, win);\n}\n\nexport const CLIPBOARD_SERVICE_PROVIDER = {\n    deps: [DOCUMENT, WINDOW, [new Optional(), new SkipSelf(), ClipboardService]],\n    provide: ClipboardService,\n    useFactory: CLIPBOARD_SERVICE_PROVIDER_FACTORY\n};\n","import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, Renderer } from '@angular/core';\n\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxClipboard]'\n})\nexport class ClipboardDirective implements OnInit, OnDestroy {\n    @Input('ngxClipboard') public targetElm: HTMLInputElement;\n\n    @Input() public cbContent: string;\n\n    @Output() public cbOnSuccess: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() public cbOnError: EventEmitter<any> = new EventEmitter<any>();\n    constructor(\n        private clipboardSrv: ClipboardService,\n        private renderer: Renderer\n\n    ) { }\n\n    // tslint:disable-next-line:no-empty\n    public ngOnInit() { }\n\n    public ngOnDestroy() {\n        this.clipboardSrv.destroy();\n    }\n\n    @HostListener('click', ['$event.target']) public onClick() {\n        if (!this.clipboardSrv.isSupported) {\n            this.handleResult(false, undefined);\n        } else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm, this.renderer),\n                this.targetElm.value);\n        } else if (this.cbContent) {\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.renderer), this.cbContent);\n        }\n    }\n\n    /**\n     * Fires an event based on the copy operation result.\n     * @param succeeded\n     */\n    private handleResult(succeeded: boolean, copiedContent: string | undefined) {\n        if (succeeded) {\n            this.cbOnSuccess.emit({ isSuccess: true, content: copiedContent });\n        } else {\n            this.cbOnError.emit({ isSuccess: false });\n        }\n    }\n}\n","import { ClipboardDirective } from './clipboard.directive';\nimport { CLIPBOARD_SERVICE_PROVIDER } from './clipboard.service';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { WindowTokenModule } from 'ngx-window-token';\nexport * from './clipboard.directive';\nexport * from './clipboard.service';\n\n@NgModule({\n    imports: [CommonModule, WindowTokenModule],\n    // tslint:disable-next-line:object-literal-sort-keys\n    declarations: [ClipboardDirective],\n    exports: [ClipboardDirective],\n    providers: [CLIPBOARD_SERVICE_PROVIDER]\n})\nexport class ClipboardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { WalletComponent } from './wallet.component';\nimport { ClipboardModule } from 'ngx-clipboard';\nexport class WalletModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    BrowserModule,\n    CommonModule,\n    ClipboardModule\n  ],\n  declarations: [WalletComponent],\n  exports: [\n    WalletComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WalletModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWalletModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWalletModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nexport class HistoryComponent implements OnInit {\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-history',\n  template: `\n    <div class=\"block\">\n\n      <ul class=\"nav nav-tabs pt-2\" role=\"tablist\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"/history/orders\">Order History</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/history/trades\">Trade History</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/history/account\">Account History</a>\n        </li>\n      </ul>\n\n\n      <table class=\"table table-condensed table-striped mb-0\">\n        <thead>\n        <tr>\n          <th>ID <i class=\"fa fa-sort\"></i></th>\n          <th>Type <i class=\"fa fa-sort\"></i></th>\n          <th>State <i class=\"fa fa-sort\"></i></th>\n          <th>Market <i class=\"fa fa-sort\"></i></th>\n          <th>Price <i class=\"fa fa-sort\"></i></th>\n          <th>Volume <i class=\"fa fa-sort\"></i></th>\n          <th>Avg. Price <i class=\"fa fa-sort\"></i></th>\n          <th>Fullfilled <i class=\"fa fa-sort\"></i></th>\n          <th>Created At <i class=\"fa fa-sort\"></i></th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr>\n          <td>1</td>\n          <td><i class=\"fa fa-btc\"></i> BTC</td>\n          <td>Active</td>\n          <td>Market</td>\n          <td>0.00000</td>\n          <td>200</td>\n          <td>0.00000</td>\n          <td>Fullfilled</td>\n          <td>12-03-2017</td>\n        </tr>\n        <tr>\n          <td>2</td>\n          <td><i class=\"fa fa-btc\"></i> BTC</td>\n          <td>Active</td>\n          <td>Market</td>\n          <td>0.00000</td>\n          <td>200</td>\n          <td>0.00000</td>\n          <td>Fullfilled</td>\n          <td>12-03-2017</td>\n        </tr>\n        <tr>\n          <td>3</td>\n          <td><i class=\"fa fa-btc\"></i> BTC</td>\n          <td>Active</td>\n          <td>Market</td>\n          <td>0.00000</td>\n          <td>200</td>\n          <td>0.00000</td>\n          <td>Fullfilled</td>\n          <td>12-03-2017</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <nav class=\"mt-3\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\">\n          <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n        </li>\n        <li class=\"page-item active\"><a class=\"page-link\" href=\"#\">1</a></li>\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n        <li class=\"page-item\">\n          <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HistoryComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHistoryComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHistoryComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HistoryComponent} from './history.component';\nexport class HistoryModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [HistoryComponent],\n  exports: [\n    HistoryComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HistoryModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHistoryModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHistoryModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nexport class SettingComponent implements OnInit {\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-setting',\n  template: `\n    <div class=\"card\">\n\n      <div class=\"card-block\">\n        <div class=\"row\">\n\n          <div class=\"col-md-5\">\n            <div class=\"p-3\">\n              <h3>admin@peatio.tech</h3>\n              <p>Admin and revise your profile.\n                <br>\n                <span class=\"badge badge-warning\">ADMIN</span>\n              </p>\n              <p>In order to protect your bitcoins and personal information, we strongly suggest that you use Two-Factor Authentication.</p>\n            </div>\n          </div>\n\n          <div class=\"col\">\n            <div class=\"row\">\n\n              <div class=\"col-md-12\">\n                <div class=\"card-block no-padding\">\n                  <div class=\"list-group icons-list\" id=\"list-tab\" role=\"tablist\">\n                    <div class=\"list-group-item list-group-item-wizard active\" id=\"list-home-list\" data-toggle=\"list\" href=\"#list-home\" role=\"tab\" aria-controls=\"home\">\n                      <span class=\"list-group-item-icon bg-success\">1</span>\n                      <div class=\"completed\">\n                        <b>E-mail verification</b>\n                        <div class=\"list-group-item-subtitle\">\n                          <span>\n                            Your email adress has been verified successfully, remember and protect this e-mail address, it is the single certificate for your account\n                          </span>\n                        </div>\n                      </div>\n\n                    </div>\n                    <div class=\"list-group-item list-group-item-wizard\" id=\"list-profile-list\" data-toggle=\"list\" href=\"#list-profile\" role=\"tab\" aria-controls=\"profile\">\n                      <span class=\"list-group-item-icon\">2</span>\n                      <div>\n                        <b>Verify Account</b>\n                        <div class=\"list-group-item-subtitle\">\n                          <span>Help keep the bad guys out of your account by using both your password and your phone</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"list-group-item list-group-item-wizard\" id=\"list-messages-list\" data-toggle=\"list\" href=\"#list-messages\" role=\"tab\" aria-controls=\"messages\">\n                      <span class=\"list-group-item-icon bg-success\">3</span>\n                      <div class=\"completed\">\n                        <b>Phone Number</b>\n                        <div class=\"list-group-item-subtitle\">\n                          <span>Providing a phone number will make your account more secure. You can quickly reset your password and your account operations will be notified.</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"list-group-item list-group-item-wizard\" id=\"list-settings-list\" data-toggle=\"list\" href=\"#list-settings\" role=\"tab\" aria-controls=\"settings\">\n                      <span class=\"list-group-item-icon\">4</span>\n                      <div>\n                        <b>Two-Factor Authentication</b>\n                        <div class=\"list-group-item-subtitle\">\n                          <span>Two-Factor Authentication provides another layer of security to your account.</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"list-group-item list-group-item-wizard\"  aria-controls=\"settings\">\n                      <span class=\"list-group-item-icon\">5</span>\n                      <div>\n                        <b>Password</b>\n                        <div class=\"list-group-item-subtitle\">\n                          <span>This password is required for login, please remember it.</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SettingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSettingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSettingComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingComponent } from './setting.component';\nexport class SettingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [SettingComponent],\n  exports: [\n    SettingComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SettingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSettingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSettingModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nexport class NavbarComponent implements OnInit {\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cb-navbar',\n  template: `\n    <div class=\"main-nav\">\n        <div class=\"container\">\n\n            <nav class=\"navbar navbar-expand-lg main-nav\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav mr-auto\">\n                        <ng-content></ng-content>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    </div>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavbarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavbarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavbarComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NavbarComponent} from './navbar.component';\nexport class NavbarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [NavbarComponent],\n  exports: [\n    NavbarComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavbarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNavbarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavbarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class PagerService {\n/**\n * @param {?} totalItems\n * @param {?=} currentPage\n * @param {?=} pageSize\n * @return {?}\n */\ngetPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\n        let /** @type {?} */ totalPages = Math.ceil(totalItems / pageSize);\n\n        let /** @type {?} */ startPage: number, /** @type {?} */ endPage: number;\n        if (totalPages <= 10) {\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        let /** @type {?} */ startIndex = (currentPage - 1) * pageSize;\n        let /** @type {?} */ endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        let /** @type {?} */ pages = Array.from(Array(endPage + 1 - startPage), (_ , i) => startPage + i );\n\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TableConfig} from './models/table-config';\nimport {PagerService} from './services/pager.service';\nexport class TableComponent implements OnInit {\n\n     config: TableConfig;\n    sortField: string;\n    order: string;\n    pager: any = {};\n    allItems: any[];\n/**\n * @param {?} pagerService\n */\nconstructor(private pagerService: PagerService) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.allItems = this.config.values;\n        this.setPage(1);\n    }\n/**\n * @param {?} field\n * @return {?}\n */\nmySorting(field) {\n        if (this.order === 'asc') {\n            this.order = 'desc';\n        } else {\n            this.order = 'asc';\n        }\n        this.sortField = field;\n        this.sort();\n        this.setPage(this.pager.currentPage);\n    }\n/**\n * @param {?} page\n * @return {?}\n */\nsetPage(page: number) {\n        if (page < 1 || page > this.pager.totalPages) {\n            return;\n        }\n        this.pager = this.pagerService.getPager(this.allItems.length, page);\n        this.config.values = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n    }\n/**\n * @return {?}\n */\nsort() {\n        if (this.order === 'asc') {\n            this.allItems.sort((a: any, b: any) => {\n                if (a[this.sortField] > b[this.sortField]) {\n                    return 1;\n                } else if (a[this.sortField] < b[this.sortField]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n            return this.allItems;\n        } else if (this.order === 'desc') {\n            this.allItems.sort((a: any, b: any) => {\n                if (a[this.sortField] > b[this.sortField]) {\n                    return -1;\n                } else if (a[this.sortField] < b[this.sortField]) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            return this.allItems;\n        } else {\n            return this.allItems;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'cb-table',\n    template: `\n      <table class=\"table table-condensed table-striped mb-0\" *ngIf=\"config\">\n          <thead>\n              <tr>\n                  <th *ngFor=\"let column of config.columns\">\n                      {{column.label}}\n                      <i *ngIf=\"column.isSortable\" class=\"fa fa-sort\" [ngClass]=\"{\n                                    'fa-sort-asc': (order === 'asc' && column.field === sortField),\n                                    'fa-sort-desc': (order === 'desc' && column.field === sortField)\n                                  }\" aria-hidden=\"true\" (click)=\"mySorting(column.field)\"></i>\n                  </th>\n              </tr>\n          </thead>\n          <tbody>\n              <tr *ngFor=\"let value of config.values\">\n                  <td *ngFor=\"let column of config.columns\">\n                      {{value[column.field]}}\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n      <nav class=\"mt-3\">\n          <ul *ngIf=\"pager.pages && pager.pages.length\" class=\"pagination\">\n              <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === 1}\">\n                  <a (click)=\"setPage(pager.currentPage - 1)\" class=\"page-link\">Previous</a>\n              </li>\n              <li class=\"page-item\" *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\">\n                  <a (click)=\"setPage(page)\" class=\"page-link\">{{page}}</a>\n              </li>\n              <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\n                  <a (click)=\"setPage(pager.currentPage + 1)\" class=\"page-link\">Next</a>\n              </li>\n          </ul>\n      </nav>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PagerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n};\n}\n\nfunction TableComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTableComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableComponent.ctorParameters;\n/** @type {?} */\nTableComponent.propDecorators;\n/** @type {?} */\nTableComponent.prototype.config;\n/** @type {?} */\nTableComponent.prototype.sortField;\n/** @type {?} */\nTableComponent.prototype.order;\n/** @type {?} */\nTableComponent.prototype.pager;\n/** @type {?} */\nTableComponent.prototype.allItems;\n/** @type {?} */\nTableComponent.prototype.pagerService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TableComponent} from './table.component';\nimport {PagerService} from './services/pager.service';\nexport class TableModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [TableComponent],\n    providers: [PagerService],\n    exports: [\n        TableComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["HeaderComponent","prototype","ngOnInit","decorators","type","Component","args","selector","template","styles","ctorParameters","Trigger","open","close","this","isManual","DEFAULT_ALIASES","hover","focus","listenToTriggersV2","renderer","options","parsedTriggers","triggers","aliases","trimmedTriggers","trim","length","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","parseTriggers","target","Function","listeners","_registerHide","registerHide","forEach","fn","push","useToggle","showFn","toggle","show","listen","hide","unsubscribeFn","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Object","defineProperty","get","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","assign","ElementRef","nativeElement","appendChild","location","document","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listenOpts","_this","outsideClick","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","setTimeout","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","height","top","bottom","left","right","getStyle","bcRect","getBoundingClientRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","window","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","classList","add","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","PositioningService","pos","style","_getHtmlElement","Injectable","guessedVersion","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","isOpen","_subscription","value","dropdown","addClass","setStyle","ngOnDestroy","changeDetection","ChangeDetectionStrategy","OnPush","host","ChangeDetectorRef","Renderer2","win","isBs3","__theme","spanEl","createElement","innerText","body","rect","_guessBsVersion","BsDropdownDirective","_cis","_config","_isInlineOpen","_subscriptions","_isInited","_dropdown","useValue","set","_isDisabled","_showInline","isDisabled","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","dropup","_placement","removeShowClass","_i","_a","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","Directive","exportAs","providers","[class.dropup]","[class.open]","[class.show]","ViewContainerRef","propDecorators","Input","Output","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onClick","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","HostListener","BsDropdownModule","forRoot","config","ngModule","NgModule","declarations","exports","entryComponents","HeaderModule","imports","CommonModule","FooterComponent","FooterModule","WalletComponent","accounts","WINDOW","InjectionToken","WindowTokenModule","useFactory","ClipboardService","queryCommandSupported","isTargetValid","HTMLInputElement","HTMLTextAreaElement","hasAttribute","copyFromInputElement","targetElm","selectTarget","re","copyText","clearSelection","error","copyFromContent","tempTextArea","createTempTextArea","undefined","inputElement","invokeElementMethod","execCommand","blur","getSelection","removeAllRanges","doc","ta","isRTL","getAttribute","fontSize","border","padding","margin","yPosition","scrollTop","setAttribute","Inject","DOCUMENT","CLIPBOARD_SERVICE_PROVIDER","deps","Optional","SkipSelf","parentDispatcher","ClipboardDirective","clipboardSrv","cbOnSuccess","cbOnError","isSupported","handleResult","cbContent","succeeded","copiedContent","isSuccess","Renderer","ClipboardModule","WalletModule","BrowserModule","HistoryComponent","HistoryModule","SettingComponent","SettingModule","NavbarComponent","NavbarModule","PagerService","getPager","totalItems","currentPage","pageSize","startPage","endPage","totalPages","ceil","startIndex","endIndex","min","pages","Array","from","_","i","TableComponent","pagerService","pager","allItems","values","setPage","mySorting","field","order","sortField","sort","page","a","b","TableModule"],"mappings":"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"}
